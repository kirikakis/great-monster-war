group 'com.github.kirikakis.monster.war'

apply plugin:'java'
apply plugin:'base'
apply plugin:'application'
apply plugin:'idea'

def versions = [
        jdk:            '1.8',
        junit:          '4.12',
        mockito:        '1.9.5'
]

sourceCompatibility = versions.jdk

mainClassName = 'com.github.kirikakis.monster.war.Main'
applicationName = 'great-monster-war'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    testCompile 'org.mockito:mockito-all:' + versions.mockito
    testCompile 'junit:junit:' + versions.junit
}

run {
    if (project.hasProperty("monsters")) {
        args findProperty('monsters').split(' ')
    }
}

tasks.withType(JavaExec) {
    // Assign all Java system properties from
    // the command line to the JavaExec task.
    systemProperties System.properties
}

startScripts {
    // Add config, libs folders to classpath. Using workaround at
    // https://discuss.gradle.org/t/classpath-in-application-plugin-is-building-always-relative-to-app-hoe-lib-directory/2012
    classpath += files('config')
    doLast {
        def windowsScriptFile = file getWindowsScript()
        def unixScriptFile = file getUnixScript()
        windowsScriptFile.text = windowsScriptFile.text.replace('%APP_HOME%\\lib\\config', '%APP_HOME%\\config')
        unixScriptFile.text = unixScriptFile.text.replace('$APP_HOME/lib/config', '$APP_HOME/config')
    }
}

distZip {
    into(project.name + '/config') {
        from 'src/main/resources'
    }
}

distTar {
    into(project.name + '/config') {
        from 'src/main/resources'
    }
}
